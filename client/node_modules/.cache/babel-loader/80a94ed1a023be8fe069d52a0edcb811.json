{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmarturx\\\\OneDrive - Intel Corporation\\\\Desktop\\\\apex_1\\\\client\\\\src\\\\containers\\\\Profile.js\";\n// Import React, React Router, and React Hook Form\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\n// Import the Material UI components\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\n\n// Import the API module\nimport api from \"../utils/api\";\n\n// Define the Profile component\nfunction Profile() {\n  // Use the useForm hook to handle the form data and validation\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n\n  // Use the useHistory hook to access the history object\n  const history = useHistory();\n\n  // Define a function to handle the form submission\n  const onSubmit = async data => {\n    // Try to update the user profile using the API module\n    try {\n      // Call the updateUser function with the data\n      const response = await api.updateUser(data);\n      // Check if the response is successful\n      if (response.status === 200) {\n        // Reset the form fields\n        reset();\n        // Redirect to the home page\n        history.push(\"/\");\n      }\n    } catch (err) {\n      // Handle any errors\n      console.error(err);\n    }\n  };\n\n  // Return the JSX code for the profile page\n  return (\n    /*#__PURE__*/\n    // Use the Container component to center the content\n    React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, \"// Use the Typography component to display the title\", /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      style: {\n        margin: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, \"Profile\"), \"// Use the handleSubmit function to wrap the form submission\", /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"// Use the TextField component to create the username input\", /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"Username\",\n      type: \"text\"\n      // Use the register function to validate the input\n    }, register(\"username\", {\n      required: true,\n      minLength: 3,\n      maxLength: 20\n    }), {\n      // Display an error message if the input is invalid\n      error: !!errors.username,\n      helperText: errors.username && \"Username must be between 3 and 20 characters\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })), \"// Use the TextField component to create the email input\", /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"Email\",\n      type: \"email\"\n      // Use the register function to validate the input\n    }, register(\"email\", {\n      required: true,\n      pattern: /^\\S+@\\S+$/i\n    }), {\n      // Display an error message if the input is invalid\n      error: !!errors.email,\n      helperText: errors.email && \"Please enter a valid email\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    })), \"// Use the TextField component to create the password input\", /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"Password\",\n      type: \"password\"\n      // Use the register function to validate the input\n    }, register(\"password\", {\n      required: true,\n      minLength: 6\n    }), {\n      // Display an error message if the input is invalid\n      error: !!errors.password,\n      helperText: errors.password && \"Password must be at least 6 characters\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    })), \"// Use the TextField component to create the confirm password input\", /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"Confirm Password\",\n      type: \"password\"\n      // Use the register function to validate the input\n    }, register(\"confirmPassword\", {\n      required: true,\n      validate: value => value === watch(\"password\")\n    }), {\n      // Display an error message if the input is invalid\n      error: !!errors.confirmPassword,\n      helperText: errors.confirmPassword && \"Passwords must match\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    })), \"// Use the Button component to create the submit button\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Update\")))\n  );\n}\n\n// Export the Profile component\nexport default Profile;","map":{"version":3,"names":["React","useHistory","useForm","Container","Typography","TextField","Button","api","Profile","register","handleSubmit","formState","errors","reset","history","onSubmit","data","response","updateUser","status","push","err","console","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","style","margin","Object","assign","label","type","required","minLength","maxLength","username","helperText","width","pattern","email","password","validate","value","watch","confirmPassword","color"],"sources":["C:/Users/vmarturx/OneDrive - Intel Corporation/Desktop/apex_1/client/src/containers/Profile.js"],"sourcesContent":["// Import React, React Router, and React Hook Form\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Import the Material UI components\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\r\n\r\n// Import the API module\r\nimport api from \"../utils/api\";\r\n\r\n// Define the Profile component\r\nfunction Profile() {\r\n  // Use the useForm hook to handle the form data and validation\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  // Use the useHistory hook to access the history object\r\n  const history = useHistory();\r\n\r\n  // Define a function to handle the form submission\r\n  const onSubmit = async (data) => {\r\n    // Try to update the user profile using the API module\r\n    try {\r\n      // Call the updateUser function with the data\r\n      const response = await api.updateUser(data);\r\n      // Check if the response is successful\r\n      if (response.status === 200) {\r\n        // Reset the form fields\r\n        reset();\r\n        // Redirect to the home page\r\n        history.push(\"/\");\r\n      }\r\n    } catch (err) {\r\n      // Handle any errors\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Return the JSX code for the profile page\r\n  return (\r\n    // Use the Container component to center the content\r\n    <Container>\r\n      // Use the Typography component to display the title\r\n      <Typography variant=\"h3\" align=\"center\" style={{ margin: \"20px\" }}>\r\n        Profile\r\n      </Typography>\r\n      // Use the handleSubmit function to wrap the form submission\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        // Use the TextField component to create the username input\r\n        <TextField\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          // Use the register function to validate the input\r\n          {...register(\"username\", {\r\n            required: true,\r\n            minLength: 3,\r\n            maxLength: 20,\r\n          })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.username}\r\n          helperText={\r\n            errors.username && \"Username must be between 3 and 20 characters\"\r\n          }\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the TextField component to create the email input\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          // Use the register function to validate the input\r\n          {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.email}\r\n          helperText={errors.email && \"Please enter a valid email\"}\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the TextField component to create the password input\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          // Use the register function to validate the input\r\n          {...register(\"password\", { required: true, minLength: 6 })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.password}\r\n          helperText={\r\n            errors.password && \"Password must be at least 6 characters\"\r\n          }\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the TextField component to create the confirm password input\r\n        <TextField\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          // Use the register function to validate the input\r\n          {...register(\"confirmPassword\", {\r\n            required: true,\r\n            validate: (value) => value === watch(\"password\"),\r\n          })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.confirmPassword}\r\n          helperText={errors.confirmPassword && \"Passwords must match\"}\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the Button component to create the submit button\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        >\r\n          Update\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Export the Profile component\r\nexport default Profile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmarturx\\\\OneDrive - Intel Corporation\\\\Desktop\\\\apex_1\\\\client\\\\src\\\\containers\\\\Login.js\";\n// Import React, React Router, and React Hook Form\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Import the Material UI components\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\n\n// Define the Login component\nfunction Login() {\n  // Use the useForm hook to handle the form data and validation\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // Use the useHistory hook to access the history object\n  const history = useHistory();\n\n  // Define a function to handle the form submission\n  const onSubmit = data => {\n    // Simulate an API call that returns a token\n    // You can replace this with your own logic\n    const token = \"some-random-string\";\n    // Save the token to the sessionStorage\n    sessionStorage.setItem(\"token\", token);\n    // Redirect to the profile page\n    history.push(\"/profile\");\n  };\n\n  // Return the JSX code for the login page\n  return (\n    /*#__PURE__*/\n    // Use the Container component to center the content\n    React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }, \"// Use the Typography component to display the title\", /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      style: {\n        margin: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, \"Login\"), \"// Use the handleSubmit function to wrap the form submission\", /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, \"// Use the TextField component to create the email input\", /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"Email\",\n      type: \"email\"\n      // Use the register function to validate the input\n    }, register(\"email\", {\n      required: true,\n      pattern: /^\\S+@\\S+$/i\n    }), {\n      // Display an error message if the input is invalid\n      error: !!errors.email,\n      helperText: errors.email && \"Please enter a valid email\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    })), \"// Use the TextField component to create the password input\", /*#__PURE__*/React.createElement(TextField, Object.assign({\n      label: \"Password\",\n      type: \"password\"\n      // Use the register function to validate the input\n    }, register(\"password\", {\n      required: true,\n      minLength: 6\n    }), {\n      // Display an error message if the input is invalid\n      error: !!errors.password,\n      helperText: errors.password && \"Password must be at least 6 characters\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    })), \"// Use the Button component to create the submit button\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      style: {\n        width: \"100%\",\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Login\")))\n  );\n}\n\n// Export the Login component\nexport default Login;","map":{"version":3,"names":["React","useHistory","useForm","useNavigate","Container","Typography","TextField","Button","Login","register","handleSubmit","formState","errors","history","onSubmit","data","token","sessionStorage","setItem","push","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","style","margin","Object","assign","label","type","required","pattern","error","email","helperText","width","minLength","password","color"],"sources":["C:/Users/vmarturx/OneDrive - Intel Corporation/Desktop/apex_1/client/src/containers/Login.js"],"sourcesContent":["// Import React, React Router, and React Hook Form\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// Import the Material UI components\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\r\n\r\n// Define the Login component\r\nfunction Login() {\r\n  // Use the useForm hook to handle the form data and validation\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  // Use the useHistory hook to access the history object\r\n  const history = useHistory();\r\n\r\n  // Define a function to handle the form submission\r\n  const onSubmit = (data) => {\r\n    // Simulate an API call that returns a token\r\n    // You can replace this with your own logic\r\n    const token = \"some-random-string\";\r\n    // Save the token to the sessionStorage\r\n    sessionStorage.setItem(\"token\", token);\r\n    // Redirect to the profile page\r\n    history.push(\"/profile\");\r\n  };\r\n\r\n  // Return the JSX code for the login page\r\n  return (\r\n    // Use the Container component to center the content\r\n    <Container>\r\n      // Use the Typography component to display the title\r\n      <Typography variant=\"h3\" align=\"center\" style={{ margin: \"20px\" }}>\r\n        Login\r\n      </Typography>\r\n      // Use the handleSubmit function to wrap the form submission\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        // Use the TextField component to create the email input\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          // Use the register function to validate the input\r\n          {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.email}\r\n          helperText={errors.email && \"Please enter a valid email\"}\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the TextField component to create the password input\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          // Use the register function to validate the input\r\n          {...register(\"password\", { required: true, minLength: 6 })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.password}\r\n          helperText={\r\n            errors.password && \"Password must be at least 6 characters\"\r\n          }\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the Button component to create the submit button\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Export the Login component\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
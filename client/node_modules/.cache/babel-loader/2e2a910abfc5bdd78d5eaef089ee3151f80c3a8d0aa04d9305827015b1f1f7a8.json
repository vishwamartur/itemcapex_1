{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmarturx\\\\OneDrive - Intel Corporation\\\\Desktop\\\\apex_1\\\\client\\\\src\\\\containers\\\\Login.js\",\n  _s = $RefreshSig$();\n// Import React, React Router, and React Hook Form\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\n// Import the Material UI components\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\n\n// Define the Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // Use the useForm hook to handle the form data and validation\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // Use the useHistory hook to access the history object\n  const history = useHistory();\n\n  // Define a function to handle the form submission\n  const onSubmit = data => {\n    // Simulate an API call that returns a token\n    // You can replace this with your own logic\n    const token = \"some-random-string\";\n    // Save the token to the sessionStorage\n    sessionStorage.setItem(\"token\", token);\n    // Redirect to the profile page\n    history.push(\"/profile\");\n  };\n\n  // Return the JSX code for the login page\n  return (\n    /*#__PURE__*/\n    // Use the Container component to center the content\n    _jsxDEV(Container, {\n      children: [\"// Use the Typography component to display the title\", /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        align: \"center\",\n        style: {\n          margin: \"20px\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), \"// Use the handleSubmit function to wrap the form submission\", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [\"// Use the TextField component to create the email input\", /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          type: \"email\"\n          // Use the register function to validate the input\n          ,\n          ...register(\"email\", {\n            required: true,\n            pattern: /^\\S+@\\S+$/i\n          }),\n          // Display an error message if the input is invalid\n          error: !!errors.email,\n          helperText: errors.email && \"Please enter a valid email\",\n          style: {\n            width: \"100%\",\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), \"// Use the TextField component to create the password input\", /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          type: \"password\"\n          // Use the register function to validate the input\n          ,\n          ...register(\"password\", {\n            required: true,\n            minLength: 6\n          }),\n          // Display an error message if the input is invalid\n          error: !!errors.password,\n          helperText: errors.password && \"Password must be at least 6 characters\",\n          style: {\n            width: \"100%\",\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), \"// Use the Button component to create the submit button\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          style: {\n            width: \"100%\",\n            margin: \"10px\"\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// Export the Login component\n_s(Login, \"/dg7Fn+/N/mq3q4rdFEpms7W+Js=\", false, function () {\n  return [useForm, useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useHistory","useForm","Container","Typography","TextField","Button","jsxDEV","_jsxDEV","Login","_s","register","handleSubmit","formState","errors","history","onSubmit","data","token","sessionStorage","setItem","push","children","variant","align","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","label","type","required","pattern","error","email","helperText","width","minLength","password","color","_c","$RefreshReg$"],"sources":["C:/Users/vmarturx/OneDrive - Intel Corporation/Desktop/apex_1/client/src/containers/Login.js"],"sourcesContent":["// Import React, React Router, and React Hook Form\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// Import the Material UI components\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\r\n\r\n// Define the Login component\r\nfunction Login() {\r\n  // Use the useForm hook to handle the form data and validation\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  // Use the useHistory hook to access the history object\r\n  const history = useHistory();\r\n\r\n  // Define a function to handle the form submission\r\n  const onSubmit = (data) => {\r\n    // Simulate an API call that returns a token\r\n    // You can replace this with your own logic\r\n    const token = \"some-random-string\";\r\n    // Save the token to the sessionStorage\r\n    sessionStorage.setItem(\"token\", token);\r\n    // Redirect to the profile page\r\n    history.push(\"/profile\");\r\n  };\r\n\r\n  // Return the JSX code for the login page\r\n  return (\r\n    // Use the Container component to center the content\r\n    <Container>\r\n      // Use the Typography component to display the title\r\n      <Typography variant=\"h3\" align=\"center\" style={{ margin: \"20px\" }}>\r\n        Login\r\n      </Typography>\r\n      // Use the handleSubmit function to wrap the form submission\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        // Use the TextField component to create the email input\r\n        <TextField\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          // Use the register function to validate the input\r\n          {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.email}\r\n          helperText={errors.email && \"Please enter a valid email\"}\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the TextField component to create the password input\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          // Use the register function to validate the input\r\n          {...register(\"password\", { required: true, minLength: 6 })}\r\n          // Display an error message if the input is invalid\r\n          error={!!errors.password}\r\n          helperText={\r\n            errors.password && \"Password must be at least 6 characters\"\r\n          }\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        />\r\n        // Use the Button component to create the submit button\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          style={{ width: \"100%\", margin: \"10px\" }}\r\n        >\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Export the Login component\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}